// <auto-generated />
using LogisticAPI.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LogisticAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LogisticAPI.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryCode = "CAN",
                            CountryName = "Canada"
                        },
                        new
                        {
                            Id = 2,
                            CountryCode = "USA",
                            CountryName = "United States of America"
                        },
                        new
                        {
                            Id = 3,
                            CountryCode = "MEX",
                            CountryName = "Mexico"
                        },
                        new
                        {
                            Id = 4,
                            CountryCode = "BLZ",
                            CountryName = "Belize"
                        },
                        new
                        {
                            Id = 5,
                            CountryCode = "GTM",
                            CountryName = "Guatemala"
                        },
                        new
                        {
                            Id = 6,
                            CountryCode = "SLV",
                            CountryName = "Salvador"
                        },
                        new
                        {
                            Id = 7,
                            CountryCode = "HND",
                            CountryName = "Honduras"
                        },
                        new
                        {
                            Id = 8,
                            CountryCode = "NIC",
                            CountryName = "Nicaragua"
                        },
                        new
                        {
                            Id = 9,
                            CountryCode = "CRI",
                            CountryName = "Costa Rica"
                        },
                        new
                        {
                            Id = 10,
                            CountryCode = "PAN",
                            CountryName = "Panama"
                        });
                });

            modelBuilder.Entity("LogisticAPI.Models.CountryConnection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CostOfRoad")
                        .HasColumnType("int");

                    b.Property<int>("CountryAId")
                        .HasColumnType("int");

                    b.Property<int>("CountryBId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CountryConnections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CostOfRoad = 1,
                            CountryAId = 1,
                            CountryBId = 2
                        },
                        new
                        {
                            Id = 2,
                            CostOfRoad = 1,
                            CountryAId = 2,
                            CountryBId = 3
                        },
                        new
                        {
                            Id = 3,
                            CostOfRoad = 1,
                            CountryAId = 3,
                            CountryBId = 4
                        },
                        new
                        {
                            Id = 4,
                            CostOfRoad = 1,
                            CountryAId = 3,
                            CountryBId = 5
                        },
                        new
                        {
                            Id = 5,
                            CostOfRoad = 1,
                            CountryAId = 4,
                            CountryBId = 5
                        },
                        new
                        {
                            Id = 6,
                            CostOfRoad = 1,
                            CountryAId = 5,
                            CountryBId = 6
                        },
                        new
                        {
                            Id = 7,
                            CostOfRoad = 1,
                            CountryAId = 5,
                            CountryBId = 7
                        },
                        new
                        {
                            Id = 8,
                            CostOfRoad = 1,
                            CountryAId = 6,
                            CountryBId = 7
                        },
                        new
                        {
                            Id = 9,
                            CostOfRoad = 1,
                            CountryAId = 7,
                            CountryBId = 8
                        },
                        new
                        {
                            Id = 10,
                            CostOfRoad = 1,
                            CountryAId = 7,
                            CountryBId = 8
                        },
                        new
                        {
                            Id = 11,
                            CostOfRoad = 1,
                            CountryAId = 8,
                            CountryBId = 9
                        },
                        new
                        {
                            Id = 12,
                            CostOfRoad = 1,
                            CountryAId = 9,
                            CountryBId = 10
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
